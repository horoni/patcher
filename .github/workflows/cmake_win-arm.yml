name: CMake (Windows ARM32/64)
# trigger via either push to selected branches or on manual run
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-woa
  cancel-in-progress: true

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
#============================================
# ============== ARM32 WINDOWS ==============
# ===========================================
  build-32:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    container:
      image: dockcross/windows-armv7
    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=cmake/toolchains/mingw32-armv7.cmake

      - name: Build
        # Build your program with the given configuration
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: build-woa32-${{env.BUILD_TYPE}}
          path: build/patcher.exe

#============================================
# ============== ARM64 WINDOWS ==============
# ===========================================
  build-64:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    container:
      image: dockcross/windows-arm64
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=cmake/toolchains/mingw32-aarch64.cmake

      - name: Build
        # Build your program with the given configuration
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: build-woa64-${{env.BUILD_TYPE}}
          path: build/patcher.exe
